#!/usr/bin/env python3

from logging import warning
import os
from pwn import *

score = 0

def ping_check():
    global score
    tmp = os.popen("/bin/ping -c1 127.0.0.1").read()
    if ("100% packet loss") in tmp:
        log.success("The machine is immune to ping")
        score += 1
    else:
        log.warning("Machine Accepting ICMP [PING] Requests")
        respP = input("Disable ICMP reqyests (y/n) ?").lower().strip()
        if respP == 'y':
            os.system('sudo iptables -A INPUT --proto icmp -j DROP')
            os.system("sudo iptables-save")
            log.info("Updated Configurations")
        else:
            log.warning("Advised to disable ICMP pings !")


def sudo_check():
    global score
    # awk '$1=$1' ==> Removes the empty white lines 
    sudoers = os.popen("sudo /bin/cat /etc/sudoers | grep -v '^#' | awk '$1=$1'").read()
    common = [  "Defaults env_reset",
                "Defaults mail_badpass",
                "Defaults secure_path=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\"",
                "root ALL=(ALL:ALL) ALL",
                "%admin ALL=(ALL) ALL",
                "%sudo ALL=(ALL:ALL) ALL" ]
    sudoers_line = sudoers.split('\n')
    for i in sudoers_line:
        if i not in common:
            log.warning("Unsual sudo user entry identified !")
            log.failure(i)
            # TODO: ADD A PATCH PROMPT
            score -= 1
            break

def shell_spawn_log():
    global score
    bashrc = os.popen("cat ~/.bashrc | grep -Ev '(^# | \s# |^#)' | awk '$1=$1'").read()
    shell_sec = "bashLogs"
    if shell_sec not in bashrc:
        log.warning("Advised to have logging function !")
        resp = input("Requires bash spawn messages (y/n) ?").lower().strip()
        if resp == "y":
            os.system("echo 'echo Shell spawned as $(whoami) : $(date +%H:%M) $(date +%d-%h-%y) > ~/bashLogs' >> ~/.bashrc")
            log.success("Added bash Logs")
        else:
            log.warning("The shell spawn messages are not yet monitored")
            sys.exit(0)
    else:
        log.success("Bash Spawn Logs are enabled")
        score += 1



try:
    ping_check() # pass 
    sudo_check() # pass
    shell_spawn_log() # paass
    print(f"*SCORE*: {score}/3")
except KeyboardInterrupt as e:
    print(e)
